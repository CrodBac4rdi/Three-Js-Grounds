services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: showcase_dev
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  app:
    build: .
    ports:
      - "4000:4000"
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/showcase_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_HOST: db
      POSTGRES_DB: showcase_dev
      MIX_ENV: dev
      PHX_HOST: localhost
      PHX_IP: 0.0.0.0
    volumes:
      - .:/app
      - deps:/app/deps
      - build:/app/_build
      - node_modules:/app/assets/node_modules
    command: sh -c "mix deps.get && cd assets && npm install && cd .. && mix ecto.create && mix ecto.migrate && mix phx.server"
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  deps:
  build:
  node_modules: